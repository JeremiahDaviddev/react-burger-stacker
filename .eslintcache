[{"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\index.js":"1","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\reportWebVitals.js":"2","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\App.js":"3","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\BurgerPane.js":"4","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\ClearBurger.js":"5","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\BurgerStack.js":"6","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\Ingredient.js":"7","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\IngredientList.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1560,"mtime":1612837212686,"results":"12","hashOfConfig":"10"},{"size":434,"mtime":1612833004284,"results":"13","hashOfConfig":"10"},{"size":198,"mtime":1612837234985,"results":"14","hashOfConfig":"10"},{"size":550,"mtime":1612837542218,"results":"15","hashOfConfig":"10"},{"size":237,"mtime":1612837508121,"results":"16","hashOfConfig":"10"},{"size":568,"mtime":1612833607799,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1889ep8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\index.js",[],["36","37"],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\reportWebVitals.js",[],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\App.js",["38","39"],"import React, { useState } from 'react'\nimport IngredientList from './IngredientList'\nimport BurgerPane from './BurgerPane'\nimport Ingredient from './Ingredient'\n\nconst ingredientsStart = [\n  {name: 'Kaiser Bun', color: 'saddlebrown'},\n  {name: 'Sesame Bun', color: 'sandybrown'},\n  {name: 'Gluten Free Bun', color: 'peru'},\n  {name: 'Lettuce Wrap', color: 'olivedrab'},\n  {name: 'Beef Patty', color: '#3F250B'},\n  {name: 'Soy Patty', color: '#3F250B'},\n  {name: 'Black Bean Patty', color: '#3F250B'},\n  {name: 'Chicken Patty', color: 'burlywood'},\n  {name: 'Lettuce', color: 'lawngreen'},\n  {name: 'Tomato', color: 'tomato'},\n  {name: 'Bacon', color: 'maroon'},\n  {name: 'Onion', color: 'lightyellow'}\n]\n\n\nfunction App() {\n  const [ingredients, setIngredients] = useState(ingredientsStart)\n  const [burgerIngredients, setBurgerIngredients] = useState([])\n  console.log(ingredients)\n\n\n  const addToBurger = (e) => {\n    let currentBurger = burgerIngredients\n    console.log('111' + currentBurger)\n    let newIngredient = {name: e.target.innerText, color: e.target.style.backgroundColor}\n    console.log(newIngredient)\n\n\n    // currentBurger.push(newIngredient)\n\n\n    setBurgerIngredients([...burgerIngredients, newIngredient])\n  }\n\n  const clearBurger = (e) => {\n    setBurgerIngredients([])\n  }\n\n  \n    return (\n      <div style={{display: \"flex\"}}>\n        <IngredientList ingredients={ingredients} addToBurger={addToBurger} />\n        <BurgerPane burgerIngredients={burgerIngredients} clearBurger={clearBurger} />\n      </div>\n    )\n  }\n\n\nexport default App","C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\BurgerPane.js",[],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\ClearBurger.js",[],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\BurgerStack.js",[],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\Ingredient.js",["40"],"C:\\Users\\The Davids\\Desktop\\General Assembly\\Burgermore\\react-burger-stacker\\src\\IngredientList.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":23,"column":23,"nodeType":"47","messageId":"48","endLine":23,"endColumn":37},{"ruleId":"50","severity":1,"message":"51","line":4,"column":6,"nodeType":"52","messageId":"53","endLine":10,"endColumn":6},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Ingredient' is defined but never used.","Identifier","unusedVar","'setIngredients' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]